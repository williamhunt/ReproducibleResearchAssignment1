legend("topright", cex = 0.5, legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l",   ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 0.3, legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l",   ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 2, legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l",   ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 2, legend = c("Sub_1", "Sub_metering_2   ", "Sub_metering_3"), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l", family="mono",  ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 0.5, legend = c("Sub_metering_1", "Sub_metering_2   ", "Sub_metering_3"), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l", family="mono",  ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 0.5, legend = c("Sub_metering_1        ", "Sub_metering_2        ", "Sub_metering_3        "), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l", cex = 0.4, ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 0.5, legend = c("Sub_metering_1          ", "Sub_metering_2          ", "Sub_metering_3          "), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l", cex = 0.3, ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 0.8, legend = c("Sub_metering_1          ", "Sub_metering_2          ", "Sub_metering_3          "), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l", cex = 0.2, ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), cex = .2, labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 0.8, legend = c("Sub_metering_1          ", "Sub_metering_2          ", "Sub_metering_3          "), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l", cex = 0.15, ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), cex = .15, labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 0.8, legend = c("Sub_metering_1          ", "Sub_metering_2          ", "Sub_metering_3          "), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l", cex = 0.5, ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), cex = .5, labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 0.8, legend = c("Sub_metering_1          ", "Sub_metering_2          ", "Sub_metering_3          "), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
summary(tabrows$voltage)
names(tabrows)
summary(tabrows$Voltage)
with(tabrows, plot(Voltage, type = "l", ylab = "", xlab = "dateline", labels = F, at = 234))
axis(1, at = c(1,1440,2880), cex = .5, labels = c("Thu","Fri", "Sat"))
axis(2, at = c(234,236,238,240,242,244,246))
dev.copy(png, file= "plot4c.png")
dev.off()
ymax = max(tabrows$Sub_metering_1)
with(tabrows, plot(Sub_metering_1, type = "l", cex = 0.5, ylab = "Energy sub metering", xlab = "", labels = F, at = 0))
par(new=TRUE)
with(tabrows, plot(Sub_metering_2, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "red"))
par(new=TRUE)
with(tabrows, plot(Sub_metering_3, type = "l", ylab = "", xlab = "", labels = F, at = 0, ylim = c(0,ymax), col = "blue"))
axis(1, at = c(1,1440,2880), cex = .5, labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0,10,20,30))
legend("topright", cex = 0.8, legend = c("Sub_metering_1          ", "Sub_metering_2          ", "Sub_metering_3          "), pch = c("_","_","_"), col = c("black", "red", "blue") )
dev.copy(png, file= "plot3.png")
dev.off()
with(tabrows, plot(Voltage, type = "l", ylab = "", xlab = "datetime", labels = F, at = 234))
axis(1, at = c(1,1440,2880), cex = .5, labels = c("Thu","Fri", "Sat"))
axis(2, at = c(234,236,238,240,242,244,246), labels = c(234,,238,,242,,246))
dev.copy(png, file= "plot4c.png")
dev.off()
with(tabrows, plot(Voltage, type = "l", ylab = "", xlab = "datetime", labels = F, at = 234))
axis(1, at = c(1,1440,2880), cex = .5, labels = c("Thu","Fri", "Sat"))
axis(2, at = c(234,236,238,240,242,244,246), labels = c("234",,"238",,"242",,"246"))
with(tabrows, plot(Voltage, type = "l", ylab = "", xlab = "datetime", labels = F, at = 234))
axis(1, at = c(1,1440,2880), cex = .5, labels = c("Thu","Fri", "Sat"))
axis(2, at = c(234,236,238,240,242,244,246), labels = c("234","","238","","242","","246"))
dev.copy(png, file= "plot4c.png")
dev.off()
with(tabrows, plot(Voltage, type = "l", ylab = "Voltage", xlab = "datetime", labels = F, at = 234))
axis(1, at = c(1,1440,2880), cex = .5, labels = c("Thu","Fri", "Sat"))
axis(2, at = c(234,236,238,240,242,244,246), labels = c("234","","238","","242","","246"))
dev.copy(png, file= "plot4c.png")
dev.off()
names(tabrows)
with(tabrows, plot(Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime", labels = F, at = 234))
axis(1, at = c(1,1440,2880), cex = .5, labels = c("Thu","Fri", "Sat"))
axis(2, at = c(0.0,0.1,0.2,0.3,0.4,0.5))
dev.copy(png, file= "plot4c.png")
dev.off()
source('C:/Users/William Hunt/plot4c.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/William Hunt/plot4.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/William Hunt/plot4.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/William Hunt/plot2.R', echo=TRUE)
source('C:/Users/William Hunt/plot2.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/William Hunt/plot1.R', echo=TRUE)
source('C:/Users/William Hunt/plot2.R', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/plot4.R', echo=TRUE)
q()
?unzip
working
?message
?fold
source('C:/Users/William Hunt/retrieveFileForExDataProgram1.R', echo=TRUE)
retrieve_file
retrieve_file()
dateDownloaded
message("hello")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?unzip
source('~/.active-rstudio-document', echo=TRUE)
date()
source('~/.active-rstudio-document', echo=TRUE)
dateDownloaded
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(nlme)
library(lattice)
xplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, BodyWeight)
?lattice
?lattice
?llines()
?trellis.par.set()
source('C:/Users/William Hunt/plot4.R', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/plot3test.R', echo=TRUE)
source('C:/Users/William Hunt/plot3test.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/William Hunt/ExData_Plotting1/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/ExData_Plotting1/plot3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('C:/Users/William Hunt/plot3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
git commit -a
git commit -A
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install(ggplot2)
install.package(ggplot2)
instal.package(ggplot2)
install.packages(ggplot2)
install.packages(ggplot)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~Month)
names(airquality)
g <- ggplot(airquality, aes(Ozone, Wind))
print(g)
g <- qplot(Ozone, Wind, data = airquality)
qplot(Ozone, Wind, data = airquality)
qplot(Ozone, Wind, data = airquality, smooth = "loess")
qplot(Ozone, Wind, data = airquality, panel = panel.loess)
qplot(Ozone, Wind, data = airquality) + stats_smooth("loess")
qplot(Ozone, Wind, data = airquality) + geom_smooth()
q()
?setwd()
source('~/.active-rstudio-document', echo=TRUE)
?aggregate
install.packages(c("boot", "class", "cluster", "codetools", "data.table", "DBI", "formatR", "gsubfn", "htmltools", "httr", "KernSmooth", "markdown", "MASS", "Matrix", "mgcv", "mime", "quantmod", "Rcpp", "swirl", "testthat", "XLConnect", "XLConnectJars", "xlsxjars"))
q()
source('~/.active-rstudio-document', echo=TRUE)
names(activity)
nrow(activity)
str(activity)
summary(activity)
head(activity)
activity$interval[20:30]
activity$interval[0:6]
activity$interval[0:13]
activity$interval[0:26]
tave <- aggregate(steps ~ interval, data = activity, ave)
summary(tave)
str(tave)
plot(tave$steps)
plot(tave$steps, type = "l")
plot(tave$interval, type = "l")
plot(tave$interval, tave$steps, type = "l")
?interaction.plot
head(tave)
plot(tave$interval,tave$steps.1, type = "l")
head(activity)
?plot
plot(tave$interval,tave$steps.1, type = "l")
str(tave)
nrow(tave)
View(tave)
head(tave, skip=287)
?head
head(tave, n=2)
?skip
head(tave[,1:2], n=5)
names(tave)
str(tave)
tail(tave)
nrow(tave)
ncol(tave)
tave
tail(tave)
tave[1,1]
tave[1,]
activity[1,]
str(tave)
tave[1,2]
class(tave)
class(tave$interval)
class(tave$steps)
tave <- aggregate(activity, by=list(interval), fun = mean)
tave <- aggregate(activity, by=list(interval), FUN = mean)
str(activity)
tave <- aggregate(activity, by=list(interval,), FUN = mean)
tave <- aggregate(activity, by=list(activity$interval,), FUN = mean)
tave <- aggregate(activity, by=list(activity$interval), FUN = mean)
str(tave)
?aggregate
tave <- aggregate(x=activity, by=list(interval), FUN = mean)
tave <- aggregate(data=activity, by=list(interval), FUN = mean)
tave <- aggregate(x=activity, by=list(activity$interval), FUN = mean)
warnings()
str(tave)
View(activity)
View(sumA)
aveI <- aggregate(steps ~ interval ,data = activity, mean)
View(aveI)
plot(aveI$interval,aveI$steps, type = "l")
max[aveI$steps]
?max
max(aveI$steps)
which(aveI$steps == max(aveI$steps))
aveI$interval[104]
length(activity$steps)
which.max(aveI$steps)
length(complete.cases(activity))
dim(activity)
activity[1,]
test <- complete.cases(activity)
head(test)
sum(test)
length(activity)
length(activity$steps)
activity[,is.na(activity$steps)]
?which
test <- which(activity$steps == NA)
test
test <- which(activity$steps, is.na)
naT <- length(activity$steps) - length(complete.cases(activity$steps))
naT
length(activity$steps)
length(complete.cases(activity$steps))
length(complete.cases(activity)
)
naT <- length(activity$steps) - sum(complete.cases(activity$steps))
naT
actMS <- activity
df = data.frame(x = 1:20, y = c(1:10,rep(NA,10)))
df$y[is.na(df$y)] = mean(df$y, na.rm=TRUE)
f
f
df
df = data.frame(x = 1:20, y = c(1:10,rep(NA,10)))
df
df$y[is.na(df$y)] = mean(df$y, na.rm=TRUE)
df
q()
slasjf;lkdsjf
dffgj
install.packages("knitr")
library("knitr")
knitr
?knitr
library(knitr)
setwd("./ReproducibleResearchAssignment1")
## Read in activity data
activity <- read.csv("activity.csv")
head(activity)
knit("test.Rmd")
knit("test.Rmd")
knit("test.Rmd")
knit("test.Rmd")
keep_md: true
knit("test.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
setwd("..")
source('~/.active-rstudio-document', echo=TRUE)
meanA
medianA
maxI
naT
knit(test.Rmd)
q()
